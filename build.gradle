plugins {
    id "io.spring.dependency-management" version "1.1.0" apply false
    id "com.palantir.git-version" version "3.0.0"
}

group "com.staffbase.scim2"
version gitVersion()

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

allprojects {
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java-library"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:2.1.3.RELEASE"
        }
    }
}

subprojects {
    apply plugin: "maven-publish"

    group = rootProject.group
    archivesBaseName = project.name
    version = rootProject.version

    dependencies {
        implementation group: "com.google.guava", name: "guava", version: "$guava_version"

        compileOnly group: "org.projectlombok", name: "lombok", version: "1.18.20"
        annotationProcessor group: "org.projectlombok", name: "lombok", version: "1.18.20"

        testImplementation "junit:junit"
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier.set("javadoc")
        from javadoc
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"

                if (System.getenv("PUBLISH_URL")) {
                    url = uri(System.getenv("PUBLISH_URL"))
                    credentials {
                        username = System.getenv("PUBLISH_USERNAME") ?: ""
                        password = System.getenv("PUBLISH_PASSWORD") ?: ""
                    }
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
}

wrapper {
    gradleVersion = '7.0'
}
